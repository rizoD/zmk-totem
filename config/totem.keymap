//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tvp {
            timeout-ms = <100>;
            key-positions = <11 12 13>;
            bindings = <&tog 0>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        base_layer {
            label = "BASE";
            bindings = <
         &kp Q  &kp W    &kp E    &kp R        &kp T        &kp Z    &kp U      &kp I      &kp O    &kp P
         &kp A  &lt 8 S  &lt 1 D  &mt LSHFT T  &kp D        &kp H    &kp J      &kp K      &kp L    &kp RET
&kp ESC  &kp Y  &kp X    &kp C    &kp V        &kp B        &kp N    &kp COMMA  &kp COMMA  &kp DOT  &kp MINUS  &kp BSPC
                         &kp DEL  &kp BSPC     &kp SPACE    &kp TAB  &kp ESC    &kp BSPC
            >;
        };

        mouse_layer {
            label = "MOUS";
            bindings = <
        &trans  &trans          &trans     &trans           &trans       &trans     &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans
        &trans  &msc SCRL_DOWN  &trans     &msc SCRL_UP     &trans       &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
&trans  &trans  &msc SCRL_LEFT  &trans     &msc SCRL_RIGHT  &trans       &trans     &trans          &trans          &trans           &trans  &trans
                                &mkp RCLK  &mkp MCLK        &mkp LCLK    &mkp MCLK  &mkp RCLK       &trans
            >;
        };

        nav_layer {
            label = "NAVI";
            bindings = <
        &kp LS(LC(LEFT))  &kp PG_UP  &kp UP        &kp PG_DN  &kp LS(LC(RIGHT))    &trans  &kp LS(CAPS)        &kp LG(SPACE)  &kp LA(CAPS)  &kp LC(LALT)
        &kp LCTRL         &kp LEFT   &kp DOWN      &kp RIGHT  &kp LC(RIGHT)        &kp L   &kp RGUI            &kp DEL        &trans        &trans
&trans  &kp CAPS          &kp HOME   &kp LC(DOWN)  &kp END    &kp LC(UP)           &trans  &kp K_CONTEXT_MENU  &trans         &trans        &trans        &trans
                                     &trans        &trans     &trans               &trans  &trans              &trans
            >;
        };

        braket_layer {
            label = "BRKT";
            bindings = <
       &kp TAB    &kp I      &kp LC(LALT)  &kp O        &kp LC(F20)    &none  &none  &none  &none  &none
       &lt 0 L    &kp LEFT   &kp LALT      &kp RIGHT    &kp SPACE      &none  &none  &none  &none  &none
&kp J  &kp LSHFT  &kp LC(C)  &kp BSPC      &kp LC(V)    &kp LC(F19)    &none  &none  &none  &none  &none  &none
                             &trans        &kp LC(F14)  &kp LC(F13)    &none  &none  &none
            >;
        };

        symbol_layer {
            label = "SYMB";
            bindings = <
        &kp LC(F18)  &kp LS(I)     &kp LS(HOME)  &kp LS(O)      &kp LS(F)      &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &trans       &kp LS(LEFT)  &kp LC(F17)   &kp LS(RIGHT)  &kp RET        &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &kp J        &kp LS(C)     &kp LC(F16)   &kp LS(V)      &kp LC(F15)    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                   &trans        &kp LC(F12)    &kp LC(F11)    &trans  &trans  &trans
            >;
        };

        vs_layer {
            bindings = <
        &kp F12  &kp F9  &kp F10  &kp F11  &trans    &kp F1  &kp F3  &trans  &trans  &trans
        &trans   &trans  &kp F8   &trans   &trans    &kp F7  &kp F5  &trans  &trans  &trans
&trans  &trans   &trans  &kp F6   &trans   &trans    &trans  &kp F2  &trans  &trans  &trans  &trans
                         &trans   &trans   &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        umlaut_layer {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        num_layer {
            bindings = <
        &trans  &trans  &trans          &trans  &trans    &kp KP_DIVIDE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
        &trans  &trans  &kp KP_NUMLOCK  &trans  &trans    &kp ASTERISK   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&trans  &trans  &trans  &trans          &trans  &trans    &kp PERIOD     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL  &kp ENTER
                        &trans          &trans  &trans    &kp KP_EQUAL   &kp KP_NUMBER_0  &kp KP_COMMA
            >;

            label = "NUM";
        };
    };
};
